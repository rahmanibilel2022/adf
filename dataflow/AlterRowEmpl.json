{
	"name": "AlterRowEmpl",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InputListeEmployes",
						"type": "DatasetReference"
					},
					"name": "ListeEmployes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLTableEmploye",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          gender as string,",
				"          salaire as double,",
				"          departement as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ListeEmployes",
				"ListeEmployes alterRow(upsertIf(!isNull(id))) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          Gender as string,",
				"          Salaire as decimal(18,0),",
				"          Departement as integer",
				"     ),",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     keys:['id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          first_name,",
				"          last_name,",
				"          Gender = gender,",
				"          Salaire = salaire,",
				"          Departement = departement",
				"     )) ~> sink1"
			]
		}
	}
}